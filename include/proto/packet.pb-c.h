/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: packet.proto */

#ifndef PROTOBUF_C_packet_2eproto__INCLUDED
#define PROTOBUF_C_packet_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct RequestProto RequestProto;
typedef struct ResponseProto ResponseProto;


/* --- enums --- */


/* --- messages --- */

struct  RequestProto
{
  ProtobufCMessage base;
  char *action;
  protobuf_c_boolean is_enc;
  ProtobufCBinaryData nonce;
  ProtobufCBinaryData body;
};
#define REQUEST_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&request_proto__descriptor) \
    , (char *)protobuf_c_empty_string, 0, {0,NULL}, {0,NULL} }


struct  ResponseProto
{
  ProtobufCMessage base;
  protobuf_c_boolean is_enc;
  ProtobufCBinaryData nonce;
  ProtobufCBinaryData body;
  ProtobufCBinaryData signature;
};
#define RESPONSE_PROTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response_proto__descriptor) \
    , 0, {0,NULL}, {0,NULL}, {0,NULL} }


/* RequestProto methods */
void   request_proto__init
                     (RequestProto         *message);
size_t request_proto__get_packed_size
                     (const RequestProto   *message);
size_t request_proto__pack
                     (const RequestProto   *message,
                      uint8_t             *out);
size_t request_proto__pack_to_buffer
                     (const RequestProto   *message,
                      ProtobufCBuffer     *buffer);
RequestProto *
       request_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   request_proto__free_unpacked
                     (RequestProto *message,
                      ProtobufCAllocator *allocator);
/* ResponseProto methods */
void   response_proto__init
                     (ResponseProto         *message);
size_t response_proto__get_packed_size
                     (const ResponseProto   *message);
size_t response_proto__pack
                     (const ResponseProto   *message,
                      uint8_t             *out);
size_t response_proto__pack_to_buffer
                     (const ResponseProto   *message,
                      ProtobufCBuffer     *buffer);
ResponseProto *
       response_proto__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   response_proto__free_unpacked
                     (ResponseProto *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*RequestProto_Closure)
                 (const RequestProto *message,
                  void *closure_data);
typedef void (*ResponseProto_Closure)
                 (const ResponseProto *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor request_proto__descriptor;
extern const ProtobufCMessageDescriptor response_proto__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_packet_2eproto__INCLUDED */
